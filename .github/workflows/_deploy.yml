name: Deploy-to-EC2

on:
  push:
    branches:
      - v1

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v3
      
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install
      
      - name: Build application
        run: npm run build

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy JAR files with SCP
        run: |
          scp -o StrictHostKeyChecking=no ./target/*.jar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.TARGET_DIR }}

      - name: Copy static files (CSS, JS, Images)
        run: |
          scp -o StrictHostKeyChecking=no -r ./src/main/resources/static/* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.TARGET_DIR }}/static/

      - name: Start application on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << EOF
            cd ${{ secrets.TARGET_DIR }}
            
            if pgrep -f 'java -jar'; then
              echo "Parando aplicação em execução..."
              pkill -f 'java -jar'
            fi

            echo "Iniciando nova versão da aplicação..."
            nohup java -jar *.jar > app.log 2>&1 &
            
            sleep 5
            if pgrep -f 'java -jar'; then
              echo "Aplicação iniciada com sucesso!"
            else
              echo "Falha ao iniciar a aplicação."
              exit 1
            fi
          EOF
